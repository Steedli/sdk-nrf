/*
 * Copyright (c) 2024 Nordic Semiconductor ASA
 *
 * SPDX-License-Identifier: LicenseRef-Nordic-5-Clause
 */

 / {
	chosen {
		zephyr,console = &uart135;
	};
	aliases {
		led0 = &led0;
		led1 = &led1;
		led2 = &led2;
		led3 = &led3;	
		sw0 = &button0;
		sw1 = &button1;
		sw2 = &button2;
		sw3 = &button3;
	};

	buttons {
		compatible = "gpio-keys";

		button0: button_0 {
			gpios = <&gpio0 8 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "Push button 0";
			zephyr,code = <INPUT_KEY_0>;
		};

		button1: button_1 {
			gpios = <&gpio0 9 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "Push button 1";
			zephyr,code = <INPUT_KEY_1>;
		};

		button2: button_2 {
			gpios = <&gpio0 10 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "Push button 2";
			zephyr,code = <INPUT_KEY_2>;
		};

		button3: button_3 {
			gpios = <&gpio0 11 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "Push button 3";
			zephyr,code = <INPUT_KEY_3>;
		};
	};
	leds {
		compatible = "gpio-leds";

		led0: led_0 {
			gpios = <&gpio9 0 GPIO_ACTIVE_HIGH>;
			label = "Green LED 0";
		};

		led1: led_1 {
			gpios = <&gpio9 1 GPIO_ACTIVE_HIGH>;
			label = "Green LED 1";
		};

		led2: led_2 {
			gpios = <&gpio9 2 GPIO_ACTIVE_HIGH>;
			label = "Green LED 2";
		};

		led3: led_3 {
			gpios = <&gpio9 3 GPIO_ACTIVE_HIGH>;
			label = "Green LED 3";
		};
	};			

};

&gpio9 {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpiote130 {
	owned-channels = <1 2 3 4 5 6 7>;
	status = "okay";
};

&uart136 {
	status = "disabled";
};

&uart135 {
	status = "okay";
	memory-regions = <&cpurad_dma_region>;

};
&timer020 {
	status = "okay";
};
&dppic020 {
	status = "okay";
	source-channels = < 0 1 2 3 4 5 >;
	sink-channels = < 6 7 8 9 10 11 >;
};

/* DPPIC where IPCT130 is located. */
&dppic130 {
	/* Remove default channels assignment */
	/delete-property/ owned-channels;
	/delete-property/ sink-channels;
	/delete-property/ source-channels;
	/delete-property/ nonsecure-channels;

	owned-channels = <3 4>;
    	/* 3 for gpiote130 */
	sink-channels = <3>;
    	/* not used*/
	source-channels = <4>;
	status = "okay";
};

&dppic020 {
	/* For now either `sink-channels` or `source-channels` property
	   must be defined even for interconnection within single DPPI domain.
	   See "Software limitations in nRF Connect SDK" chapter in the
	   "nRF54H20 hardware events" presentation. */
	sink-channels = <2>;
	source-channels = <3>;
	status = "okay";
};

&cpurad_ipct {
    	/* Remove default channels assignment */
	/delete-property/ source-channel-links;
	/delete-property/ sink-channel-links;

   	/* Radio IPCT channel 7 -> Global IPCT channel 3 (T020 CC0 event -> GPIOTE130 OUT task) */
	source-channel-links = <7 NRF_DOMAIN_ID_GLOBALSLOW 3>;
    	/* Global IPCT channel 4 -> Radio IPCT channel 6 (T131 CC5 event to -> T020 START task) */
	// sink-channel-links = <6 NRF_DOMAIN_ID_GLOBALSLOW 4>;
	status = "okay";
};

&ipct130 {
	/* Remove default channels assignment */
	/delete-property/ source-channel-links;
	/delete-property/ sink-channel-links;
	/delete-property/ owned-channels;

	status = "okay";
	owned-channels = <3>;
	/* Radio IPCT channel 7 -> Global IPCT channel 3 (T020 CC0 event -> GPIOTE130 OUT task) */
	sink-channel-links = <3 NRF_DOMAIN_ID_RADIOCORE 7>;
};